/**
 * This class is generated by jOOQ
 */
package sxj.db;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import sxj.db.tables.AdminUser;
import sxj.db.tables.Appointment;
import sxj.db.tables.CodeMessage;
import sxj.db.tables.ConsumptionRecord;
import sxj.db.tables.VipUser;
import sxj.db.tables.records.AdminUserRecord;
import sxj.db.tables.records.AppointmentRecord;
import sxj.db.tables.records.CodeMessageRecord;
import sxj.db.tables.records.ConsumptionRecordRecord;
import sxj.db.tables.records.VipUserRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>barbershopvip</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AdminUserRecord, Integer> IDENTITY_ADMIN_USER = Identities0.IDENTITY_ADMIN_USER;
    public static final Identity<AppointmentRecord, Integer> IDENTITY_APPOINTMENT = Identities0.IDENTITY_APPOINTMENT;
    public static final Identity<ConsumptionRecordRecord, Integer> IDENTITY_CONSUMPTION_RECORD = Identities0.IDENTITY_CONSUMPTION_RECORD;
    public static final Identity<VipUserRecord, Integer> IDENTITY_VIP_USER = Identities0.IDENTITY_VIP_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdminUserRecord> KEY_ADMIN_USER_PRIMARY = UniqueKeys0.KEY_ADMIN_USER_PRIMARY;
    public static final UniqueKey<AppointmentRecord> KEY_APPOINTMENT_PRIMARY = UniqueKeys0.KEY_APPOINTMENT_PRIMARY;
    public static final UniqueKey<CodeMessageRecord> KEY_CODE_MESSAGE_PRIMARY = UniqueKeys0.KEY_CODE_MESSAGE_PRIMARY;
    public static final UniqueKey<ConsumptionRecordRecord> KEY_CONSUMPTION_RECORD_PRIMARY = UniqueKeys0.KEY_CONSUMPTION_RECORD_PRIMARY;
    public static final UniqueKey<VipUserRecord> KEY_VIP_USER_PRIMARY = UniqueKeys0.KEY_VIP_USER_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AdminUserRecord, Integer> IDENTITY_ADMIN_USER = createIdentity(AdminUser.ADMIN_USER, AdminUser.ADMIN_USER.ID);
        public static Identity<AppointmentRecord, Integer> IDENTITY_APPOINTMENT = createIdentity(Appointment.APPOINTMENT, Appointment.APPOINTMENT.ID);
        public static Identity<ConsumptionRecordRecord, Integer> IDENTITY_CONSUMPTION_RECORD = createIdentity(ConsumptionRecord.CONSUMPTION_RECORD, ConsumptionRecord.CONSUMPTION_RECORD.ID);
        public static Identity<VipUserRecord, Integer> IDENTITY_VIP_USER = createIdentity(VipUser.VIP_USER, VipUser.VIP_USER.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AdminUserRecord> KEY_ADMIN_USER_PRIMARY = createUniqueKey(AdminUser.ADMIN_USER, "KEY_admin_user_PRIMARY", AdminUser.ADMIN_USER.ID);
        public static final UniqueKey<AppointmentRecord> KEY_APPOINTMENT_PRIMARY = createUniqueKey(Appointment.APPOINTMENT, "KEY_appointment_PRIMARY", Appointment.APPOINTMENT.ID);
        public static final UniqueKey<CodeMessageRecord> KEY_CODE_MESSAGE_PRIMARY = createUniqueKey(CodeMessage.CODE_MESSAGE, "KEY_code_message_PRIMARY", CodeMessage.CODE_MESSAGE.CODE);
        public static final UniqueKey<ConsumptionRecordRecord> KEY_CONSUMPTION_RECORD_PRIMARY = createUniqueKey(ConsumptionRecord.CONSUMPTION_RECORD, "KEY_consumption_record_PRIMARY", ConsumptionRecord.CONSUMPTION_RECORD.ID);
        public static final UniqueKey<VipUserRecord> KEY_VIP_USER_PRIMARY = createUniqueKey(VipUser.VIP_USER, "KEY_vip_user_PRIMARY", VipUser.VIP_USER.ID);
    }
}
