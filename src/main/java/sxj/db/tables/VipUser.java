/**
 * This class is generated by jOOQ
 */
package sxj.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import sxj.db.Barbershopvip;
import sxj.db.Keys;
import sxj.db.tables.records.VipUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VipUser extends TableImpl<VipUserRecord> {

    private static final long serialVersionUID = 208253624;

    /**
     * The reference instance of <code>barbershopvip.vip_user</code>
     */
    public static final VipUser VIP_USER = new VipUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VipUserRecord> getRecordType() {
        return VipUserRecord.class;
    }

    /**
     * The column <code>barbershopvip.vip_user.id</code>.
     */
    public final TableField<VipUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>barbershopvip.vip_user.name</code>. 姓名
     */
    public final TableField<VipUserRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "姓名");

    /**
     * The column <code>barbershopvip.vip_user.age</code>. 年龄
     */
    public final TableField<VipUserRecord, Integer> AGE = createField("age", org.jooq.impl.SQLDataType.INTEGER, this, "年龄");

    /**
     * The column <code>barbershopvip.vip_user.telephone</code>. 电话
     */
    public final TableField<VipUserRecord, String> TELEPHONE = createField("telephone", org.jooq.impl.SQLDataType.VARCHAR.length(11), this, "电话");

    /**
     * The column <code>barbershopvip.vip_user.integrate</code>. 积分
     */
    public final TableField<VipUserRecord, Integer> INTEGRATE = createField("integrate", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "积分");

    /**
     * The column <code>barbershopvip.vip_user.level</code>. 等级（1.普通，2.黄金，3.钻石，4.星耀）
     */
    public final TableField<VipUserRecord, Integer> LEVEL = createField("level", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "等级（1.普通，2.黄金，3.钻石，4.星耀）");

    /**
     * The column <code>barbershopvip.vip_user.sex</code>. 性别
     */
    public final TableField<VipUserRecord, Integer> SEX = createField("sex", org.jooq.impl.SQLDataType.INTEGER, this, "性别");

    /**
     * The column <code>barbershopvip.vip_user.money</code>. 余额
     */
    public final TableField<VipUserRecord, Double> MONEY = createField("money", org.jooq.impl.SQLDataType.FLOAT, this, "余额");

    /**
     * Create a <code>barbershopvip.vip_user</code> table reference
     */
    public VipUser() {
        this("vip_user", null);
    }

    /**
     * Create an aliased <code>barbershopvip.vip_user</code> table reference
     */
    public VipUser(String alias) {
        this(alias, VIP_USER);
    }

    private VipUser(String alias, Table<VipUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private VipUser(String alias, Table<VipUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Barbershopvip.BARBERSHOPVIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VipUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VIP_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VipUserRecord> getPrimaryKey() {
        return Keys.KEY_VIP_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VipUserRecord>> getKeys() {
        return Arrays.<UniqueKey<VipUserRecord>>asList(Keys.KEY_VIP_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUser as(String alias) {
        return new VipUser(alias, this);
    }

    /**
     * Rename this table
     */
    public VipUser rename(String name) {
        return new VipUser(name, null);
    }
}
