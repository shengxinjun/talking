/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.records;


import java.util.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import sxj.db.tables.Appointment;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppointmentRecord extends UpdatableRecordImpl<AppointmentRecord> implements Record6<Integer, String, Double, Integer, Integer, Date> {

    private static final long serialVersionUID = -1897912803;

    /**
     * Setter for <code>barbershopvip.appointment.id</code>.
     */
    public AppointmentRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.appointment.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>barbershopvip.appointment.context</code>. 消费类型
     */
    public AppointmentRecord setContext(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.appointment.context</code>. 消费类型
     */
    public String getContext() {
        return (String) get(1);
    }

    /**
     * Setter for <code>barbershopvip.appointment.money</code>. 消费金额
     */
    public AppointmentRecord setMoney(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.appointment.money</code>. 消费金额
     */
    public Double getMoney() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>barbershopvip.appointment.flag</code>. 是否消费
     */
    public AppointmentRecord setFlag(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.appointment.flag</code>. 是否消费
     */
    public Integer getFlag() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>barbershopvip.appointment.vip_id</code>. vip主键
     */
    public AppointmentRecord setVipId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.appointment.vip_id</code>. vip主键
     */
    public Integer getVipId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>barbershopvip.appointment.appoint_time</code>. 预约时间
     */
    public AppointmentRecord setAppointTime(Date value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.appointment.appoint_time</code>. 预约时间
     */
    public Date getAppointTime() {
        return (Date) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Double, Integer, Integer, Date> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Double, Integer, Integer, Date> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Appointment.APPOINTMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Appointment.APPOINTMENT.CONTEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Appointment.APPOINTMENT.MONEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Appointment.APPOINTMENT.FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Appointment.APPOINTMENT.VIP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field6() {
        return Appointment.APPOINTMENT.APPOINT_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getContext();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getMoney();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getVipId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value6() {
        return getAppointTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppointmentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppointmentRecord value2(String value) {
        setContext(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppointmentRecord value3(Double value) {
        setMoney(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppointmentRecord value4(Integer value) {
        setFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppointmentRecord value5(Integer value) {
        setVipId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppointmentRecord value6(Date value) {
        setAppointTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppointmentRecord values(Integer value1, String value2, Double value3, Integer value4, Integer value5, Date value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppointmentRecord
     */
    public AppointmentRecord() {
        super(Appointment.APPOINTMENT);
    }

    /**
     * Create a detached, initialised AppointmentRecord
     */
    public AppointmentRecord(Integer id, String context, Double money, Integer flag, Integer vipId, Date appointTime) {
        super(Appointment.APPOINTMENT);

        set(0, id);
        set(1, context);
        set(2, money);
        set(3, flag);
        set(4, vipId);
        set(5, appointTime);
    }
}
