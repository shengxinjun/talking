/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import sxj.db.tables.VipUser;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VipUserRecord extends UpdatableRecordImpl<VipUserRecord> implements Record8<Integer, String, Integer, String, Integer, Integer, Integer, Double> {

    private static final long serialVersionUID = 1388596791;

    /**
     * Setter for <code>barbershopvip.vip_user.id</code>.
     */
    public VipUserRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.vip_user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>barbershopvip.vip_user.name</code>. 姓名
     */
    public VipUserRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.vip_user.name</code>. 姓名
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>barbershopvip.vip_user.age</code>. 年龄
     */
    public VipUserRecord setAge(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.vip_user.age</code>. 年龄
     */
    public Integer getAge() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>barbershopvip.vip_user.telephone</code>. 电话
     */
    public VipUserRecord setTelephone(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.vip_user.telephone</code>. 电话
     */
    public String getTelephone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>barbershopvip.vip_user.integrate</code>. 积分
     */
    public VipUserRecord setIntegrate(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.vip_user.integrate</code>. 积分
     */
    public Integer getIntegrate() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>barbershopvip.vip_user.level</code>. 等级（1.普通，2.黄金，3.钻石，4.星耀）
     */
    public VipUserRecord setLevel(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.vip_user.level</code>. 等级（1.普通，2.黄金，3.钻石，4.星耀）
     */
    public Integer getLevel() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>barbershopvip.vip_user.sex</code>. 性别
     */
    public VipUserRecord setSex(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.vip_user.sex</code>. 性别
     */
    public Integer getSex() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>barbershopvip.vip_user.money</code>. 余额
     */
    public VipUserRecord setMoney(Double value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>barbershopvip.vip_user.money</code>. 余额
     */
    public Double getMoney() {
        return (Double) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Integer, String, Integer, Integer, Integer, Double> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Integer, String, Integer, Integer, Integer, Double> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return VipUser.VIP_USER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return VipUser.VIP_USER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return VipUser.VIP_USER.AGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return VipUser.VIP_USER.TELEPHONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return VipUser.VIP_USER.INTEGRATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return VipUser.VIP_USER.LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return VipUser.VIP_USER.SEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return VipUser.VIP_USER.MONEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getIntegrate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getSex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getMoney();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUserRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUserRecord value3(Integer value) {
        setAge(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUserRecord value4(String value) {
        setTelephone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUserRecord value5(Integer value) {
        setIntegrate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUserRecord value6(Integer value) {
        setLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUserRecord value7(Integer value) {
        setSex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUserRecord value8(Double value) {
        setMoney(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VipUserRecord values(Integer value1, String value2, Integer value3, String value4, Integer value5, Integer value6, Integer value7, Double value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VipUserRecord
     */
    public VipUserRecord() {
        super(VipUser.VIP_USER);
    }

    /**
     * Create a detached, initialised VipUserRecord
     */
    public VipUserRecord(Integer id, String name, Integer age, String telephone, Integer integrate, Integer level, Integer sex, Double money) {
        super(VipUser.VIP_USER);

        set(0, id);
        set(1, name);
        set(2, age);
        set(3, telephone);
        set(4, integrate);
        set(5, level);
        set(6, sex);
        set(7, money);
    }
}
