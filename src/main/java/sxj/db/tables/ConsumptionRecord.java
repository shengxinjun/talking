/**
 * This class is generated by jOOQ
 */
package sxj.db.tables;


import com.util.Timestamp2DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import sxj.db.Barbershopvip;
import sxj.db.Keys;
import sxj.db.tables.records.ConsumptionRecordRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConsumptionRecord extends TableImpl<ConsumptionRecordRecord> {

    private static final long serialVersionUID = -627813699;

    /**
     * The reference instance of <code>barbershopvip.consumption_record</code>
     */
    public static final ConsumptionRecord CONSUMPTION_RECORD = new ConsumptionRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConsumptionRecordRecord> getRecordType() {
        return ConsumptionRecordRecord.class;
    }

    /**
     * The column <code>barbershopvip.consumption_record.id</code>.
     */
    public final TableField<ConsumptionRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>barbershopvip.consumption_record.money</code>. 消费金额
     */
    public final TableField<ConsumptionRecordRecord, Double> MONEY = createField("money", org.jooq.impl.SQLDataType.FLOAT, this, "消费金额");

    /**
     * The column <code>barbershopvip.consumption_record.time</code>. 消费时间
     */
    public final TableField<ConsumptionRecordRecord, Date> TIME = createField("time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "消费时间", new Timestamp2DateConverter());

    /**
     * The column <code>barbershopvip.consumption_record.context</code>. 具体消费
     */
    public final TableField<ConsumptionRecordRecord, String> CONTEXT = createField("context", org.jooq.impl.SQLDataType.VARCHAR.length(300), this, "具体消费");

    /**
     * The column <code>barbershopvip.consumption_record.vip_id</code>. vip主键
     */
    public final TableField<ConsumptionRecordRecord, Integer> VIP_ID = createField("vip_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "vip主键");

    /**
     * Create a <code>barbershopvip.consumption_record</code> table reference
     */
    public ConsumptionRecord() {
        this("consumption_record", null);
    }

    /**
     * Create an aliased <code>barbershopvip.consumption_record</code> table reference
     */
    public ConsumptionRecord(String alias) {
        this(alias, CONSUMPTION_RECORD);
    }

    private ConsumptionRecord(String alias, Table<ConsumptionRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConsumptionRecord(String alias, Table<ConsumptionRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Barbershopvip.BARBERSHOPVIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConsumptionRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONSUMPTION_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConsumptionRecordRecord> getPrimaryKey() {
        return Keys.KEY_CONSUMPTION_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConsumptionRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<ConsumptionRecordRecord>>asList(Keys.KEY_CONSUMPTION_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConsumptionRecord as(String alias) {
        return new ConsumptionRecord(alias, this);
    }

    /**
     * Rename this table
     */
    public ConsumptionRecord rename(String name) {
        return new ConsumptionRecord(name, null);
    }
}
