/**
 * This class is generated by jOOQ
 */
package sxj.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import sxj.db.Barbershopvip;
import sxj.db.Keys;
import sxj.db.tables.records.CodeMessageRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CodeMessage extends TableImpl<CodeMessageRecord> {

    private static final long serialVersionUID = -544291640;

    /**
     * The reference instance of <code>barbershopvip.code_message</code>
     */
    public static final CodeMessage CODE_MESSAGE = new CodeMessage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CodeMessageRecord> getRecordType() {
        return CodeMessageRecord.class;
    }

    /**
     * The column <code>barbershopvip.code_message.code</code>.
     */
    public final TableField<CodeMessageRecord, Integer> CODE = createField("code", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>barbershopvip.code_message.message</code>.
     */
    public final TableField<CodeMessageRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>barbershopvip.code_message</code> table reference
     */
    public CodeMessage() {
        this("code_message", null);
    }

    /**
     * Create an aliased <code>barbershopvip.code_message</code> table reference
     */
    public CodeMessage(String alias) {
        this(alias, CODE_MESSAGE);
    }

    private CodeMessage(String alias, Table<CodeMessageRecord> aliased) {
        this(alias, aliased, null);
    }

    private CodeMessage(String alias, Table<CodeMessageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Barbershopvip.BARBERSHOPVIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CodeMessageRecord> getPrimaryKey() {
        return Keys.KEY_CODE_MESSAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CodeMessageRecord>> getKeys() {
        return Arrays.<UniqueKey<CodeMessageRecord>>asList(Keys.KEY_CODE_MESSAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeMessage as(String alias) {
        return new CodeMessage(alias, this);
    }

    /**
     * Rename this table
     */
    public CodeMessage rename(String name) {
        return new CodeMessage(name, null);
    }
}
